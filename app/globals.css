@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  :root {
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --foreground-rgb: 255, 255, 255;
      --background-start-rgb: 0, 0, 0;
      --background-end-rgb: 0, 0, 0;
    }
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/*
  ---break---
*/

:root {
  --sidebar: hsl(0 0% 98%);
  --sidebar-foreground: hsl(240 5.3% 26.1%);
  --sidebar-primary: hsl(240 5.9% 10%);
  --sidebar-primary-foreground: hsl(0 0% 98%);
  --sidebar-accent: hsl(240 4.8% 95.9%);
  --sidebar-accent-foreground: hsl(240 5.9% 10%);
  --sidebar-border: hsl(220 13% 91%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
}

/*
  ---break---
*/

.dark {
  --sidebar: hsl(240 5.9% 10%);
  --sidebar-foreground: hsl(240 4.8% 95.9%);
  --sidebar-primary: hsl(224.3 76.3% 48%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(240 3.7% 15.9%);
  --sidebar-accent-foreground: hsl(240 4.8% 95.9%);
  --sidebar-border: hsl(240 3.7% 15.9%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
}

/*
  ---break---
*/

@theme inline {
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/*
  ---break---
*/

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@keyframes pulse-glow {
  0%, 100% {
    filter: drop-shadow(0 0 3px rgba(var(--glow-color), 0.4)) opacity(1);
    transform: scale(1);
  }
  50% {
    filter: drop-shadow(0 0 10px rgba(var(--glow-color), 0.7)) opacity(0.95);
     transform: scale(1.01);
  }
}

.animate-pulse-glow {
  animation: pulse-glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@layer utilities {
  @keyframes dashdraw {
    to {
      stroke-dashoffset: 0;
    }
  }
}

.animated-flow {
  stroke-dasharray: 5;
  stroke-dashoffset: 1000;
  animation: dashdraw 30s linear infinite;
}

.animated-flow-reverse {
    stroke-dasharray: 5;
    stroke-dashoffset: -1000; 
    animation: dashdraw 30s linear infinite reverse; 
}

@keyframes faultPulse {
  0% { opacity: 1; stroke-width: inherit; } 
  50% { opacity: 0.6; stroke-width: calc(inherit + 1px); } 
  100% { opacity: 1; stroke-width: inherit; }
}
/* Default React Flow MiniMap already has max-width: 200px, max-height: 150px */
/* These styles will apply to the MiniMap container on small screens */

@media (max-width: 768px) { /* Adjust breakpoint as needed, e.g., 600px for very small */
  .react-flow__minimap {
    /* Make the minimap container smaller */
    max-width: 120px !important; /* Override default if necessary */
    max-height: 80px !important; /* Override default if necessary */

    /* Adjust shadow for smaller size */
    --xy-shadow: 0 2px 4px -1px rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1) !important;

    /* Adjust border radius for a tighter look */
    --xy-border-radius: 0.125rem !important; /* 2px if base font-size is 16px */
  }

  /* Optionally, adjust padding from screen edges for different positions */
  /* Example for BottomRight position (default for this component) */
  .react-flow__minimap.bottom.right {
    bottom: var(--xy-minimap-position-bottom, 10px) !important; /* Default is 20px */
    right: var(--xy-minimap-position-right, 10px) !important;   /* Default is 20px */
  }

  /* Example for BottomLeft position */
  .react-flow__minimap.bottom.left {
    bottom: var(--xy-minimap-position-bottom, 10px) !important;
    left: var(--xy-minimap-position-left, 10px) !important;
  }
  /* Add similar overrides for .top.left and .top.right if you use those positions */
}


/* In your global CSS */
.shadow-text-lg { text-shadow: 0px 2px 4px rgba(0,0,0,0.5); }
.shadow-text-md { text-shadow: 0px 1px 3px rgba(0,0,0,0.4); }


/* In your global CSS file */
.custom-scrollbar::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: hsl(var(--border)); /* Or a subtle color */
  border-radius: 3px;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--ring)); /* Or a slightly darker/accent color */
}


/* Suggested for your global CSS file (e.g., globals.css or app.css) */
.sld-loader-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  /* Use theme-aware text color if possible, or a neutral one */
  color: #888; /* Fallback color */
  /* Consider text-muted-foreground Tailwind class if applicable and working */
}

.sld-loader-svg {
  width: 60px;
  height: 60px;
  animation: sld-rotate 2s linear infinite;
  margin-bottom: 16px;
}

.sld-loader-path {
  stroke: currentColor; /* Uses the color from .sld-loader-container */
  stroke-linecap: round;
  animation: sld-dash 1.5s ease-in-out infinite;
}

@keyframes sld-rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes sld-dash {
  0% {
    stroke-dasharray: 1, 100;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}
.sld-handle-style {
  @apply !opacity-0 group-hover:!opacity-100 transition-opacity duration-150 ease-in-out;
  /* Default colors can be set here, but specific node handles override them */
  /* e.g. @apply !bg-slate-300 dark:!bg-slate-600 !border-slate-400 dark:!border-slate-500; */
}
.reactflow-node.selected .sld-handle-style,
.reactflow-node:focus .sld-handle-style, /* if you make nodes focusable */
.reactflow-node:focus-within .sld-handle-style { /* if elements inside node are focused */
    @apply !opacity-80; /* Make handles more visible on selected/focused node */
}

@keyframes dashdraw {
  to {
    stroke-dashoffset: -100; /* A large number, effectively loops the dashes */
  }
}

@keyframes faultPulse {
  0%, 100% { opacity: 1; /* stroke-width can also be animated */ }
  50% { opacity: 0.6; /* stroke-width: calc(var(--base-stroke-width) + 1px); */ }
}

@keyframes subtlePulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}

/* In your global CSS (e.g., app/globals.css) */
@keyframes flow-preview-bullet-normal {
  from { left: -10px; /* Assumes bullet width is 10px, start off-screen */ }
  to { left: 100%; /* End off-screen on the other side */ }
}

@keyframes flow-preview-bullet-reverse {
  from { right: -10px; /* Assumes bullet width is 10px, start off-screen */ }
  to { right: 100%; /* End off-screen on the other side */ }
}



/* In your global CSS file (e.g., globals.css) */

/* --- Root / Light Theme Edge Colors --- */
:root, [data-theme="light"] {
  --edge-color-ac-hv: #D97706; /* Amber 600 (Good contrast for light theme) */
  --edge-color-ac-mv: #F59E0B; /* Amber 500 */
  --edge-color-ac-lv: #FBBF24; /* Amber 400 */
  --edge-color-dc-hv: #2563EB; /* Blue 600 */
  --edge-color-dc-mv: #3B82F6; /* Blue 500 */
  --edge-color-dc-lv: #60A5FA; /* Blue 400 */
  --edge-color-control-signal: #16A34A; /* Green 600 */
  --edge-color-data-bus: #0D9488;  /* Teal 600 */
  --edge-color-aux-power: #9333EA; /* Purple 600 */
  --edge-color-energized-default: #65A30D; /* Lime 600 */
  --edge-color-offline: #9CA3AF;   /* Gray 400 (Visibly offline but not too faint) */
  --edge-color-fault: #DC2626;     /* Red 600 (Strong fault color) */
  --edge-color-warning: #EAB308;   /* Yellow 500 (Clear warning) */
  --edge-color-selected: #0EA5E9;  /* Sky 500 (Distinct selection) */
  
  --edge-animated-dash-default: #FFFFFF;         /* White dashes */
  --edge-animated-dash-on-warning: #422006;      /* Dark Brown/Sienna on light yellow */
  --edge-animated-dash-on-selected: #FFFFFF;     /* White on selection blue */

  /* Edge Labels */
  --edge-label-bg: #ffffff;
  --edge-label-bg-inactive: #f3f4f6; /* Gray 100 */
  --edge-label-text: #1f2937;      /* Gray 800 */
  --edge-label-border-inactive: #d1d5db; /* Gray 300 */
  --edge-label-shadow-color: rgba(0, 0, 0, 0.1);
}

/* --- Dark Theme Edge Colors --- */
[data-theme="dark"] {
  --edge-color-ac-hv: #FACC15;    /* Yellow 400 */
  --edge-color-ac-mv: #FB923C;    /* Orange 400 */
  --edge-color-ac-lv: #F97316;    /* Orange 500 */
  --edge-color-dc-hv: #60A5FA;    /* Blue 400 */
  --edge-color-dc-mv: #38BDF8;    /* Sky 400 */
  --edge-color-dc-lv: #7DD3FC;    /* Sky 300 */
  --edge-color-control-signal: #4ADE80; /* Green 400 */
  --edge-color-data-bus: #2DD4BF;    /* Teal 400 */
  --edge-color-aux-power: #C084FC;   /* Purple 400 */
  --edge-color-energized-default: #86EFAC; /* Green 300 */
  --edge-color-offline: #6B7280;     /* Gray 500 */
  --edge-color-fault: #F87171;      /* Red 400 */
  --edge-color-warning: #FDE047;    /* Yellow 300 (Brighter for dark background) */
  --edge-color-selected: #7DD3FC;   /* Sky 300 (Brighter selection for dark mode) */

  /* Animated dashes for dark theme */
  /* Option 1: Dark dashes on light color paths (if paths are bright in dark mode) */
  --edge-animated-dash-default: #111827; /* Gray 900 */
  --edge-animated-dash-on-warning: #111827;
  --edge-animated-dash-on-selected: #111827;

  /* Edge Labels */
  --edge-label-bg: #374151;         /* Gray 700 */
  --edge-label-bg-inactive: #1f2937; /* Gray 800 */
  --edge-label-text: #F3F4F6;       /* Gray 100 */
  --edge-label-border-inactive: #4b5563; /* Gray 600 */
  --edge-label-shadow-color: rgba(0, 0, 0, 0.25);
}

/* --- Edge Animation Keyframes (if not already defined) --- */
@keyframes dashdraw {
  to {
    stroke-dashoffset: var(--edge-animation-dashoffset-end);
  }
}

@keyframes faultPulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.2; }
}

@keyframes subtlePulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}